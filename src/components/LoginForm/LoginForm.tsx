import InputField from "../InputField/InputField";
import Button from "../Button/Button";

import { useState } from "react";

export default function LoginForm() {
  const [state, setState] = useState<"start" | "invalid" | "success">("start");
  const ErrorIcon = ({ state }: { state: "start" | "invalid" | "success" }) => {
    if (state === "invalid") {
      return <span >
        <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M10.5003 18.3337C15.1027 18.3337 18.8337 14.6027 18.8337 10.0003C18.8337 5.39795 15.1027 1.66699 10.5003 1.66699C5.89795 1.66699 2.16699 5.39795 2.16699 10.0003C2.16699 14.6027 5.89795 18.3337 10.5003 18.3337Z" stroke="#EB2626" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
        <path d="M10.5 6.66699V10.0003" stroke="#EB2626" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
         <path d="M10.5 13.333H10.5083" stroke="#EB2626" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
        </svg>
      </span>;
    }
    return null;
  };
  const EyeOpenIcon = () => (
    
      <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M2.7294 12.7461C2.02113 11.8259 1.66699 11.3658 1.66699 9.99967C1.66699 8.63353 2.02113 8.17345 2.7294 7.25328C4.14363 5.41597 6.51542 3.33301 10.0003 3.33301C13.4852 3.33301 15.857 5.41597 17.2712 7.25328C17.9795 8.17345 18.3337 8.63353 18.3337 9.99967C18.3337 11.3658 17.9795 11.8259 17.2712 12.7461C15.857 14.5834 13.4852 16.6663 10.0003 16.6663C6.51542 16.6663 4.14363 14.5834 2.7294 12.7461Z" stroke="#4C4C4C" stroke-width="1.5" />
  <path d="M12.5 9.99902C12.5 11.3797 11.3807 12.499 10 12.499C8.61929 12.499 7.5 11.3797 7.5 9.99902C7.5 8.61831 8.61929 7.49902 10 7.49902C11.3807 7.49902 12.5 8.61831 12.5 9.99902Z" stroke="#4C4C4C" stroke-width="1.5" />
</svg>
  );
  const EyeClosedIcon = () => (
    <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M2.85635 5.53757C2.69318 5.15685 2.25228 4.98048 1.87155 5.14365C1.49083 5.30682 1.31447 5.74772 1.47763 6.12845L2.16699 5.83301L2.85635 5.53757ZM13.4896 11.1069L13.215 10.409L13.4896 11.1069ZM8.13964 11.516C8.36555 11.1688 8.26723 10.7042 7.92004 10.4783C7.57285 10.2524 7.10827 10.3507 6.88236 10.6979L7.511 11.1069L8.13964 11.516ZM5.70502 12.5073C5.47911 12.8545 5.57743 13.3191 5.92462 13.545C6.27181 13.7709 6.73639 13.6726 6.9623 13.3254L6.33366 12.9163L5.70502 12.5073ZM19.523 6.12845C19.6862 5.74772 19.5098 5.30682 19.1291 5.14365C18.7484 4.98048 18.3075 5.15685 18.1443 5.53757L18.8337 5.83301L19.523 6.12845ZM16.3337 9.27371L15.8204 8.72686V8.72686L16.3337 9.27371ZM17.0533 11.054C17.3462 11.3469 17.8211 11.3469 18.114 11.054C18.4069 10.7611 18.4069 10.2863 18.114 9.99338L17.5837 10.5237L17.0533 11.054ZM9.75033 13.7497C9.75033 14.1639 10.0861 14.4997 10.5003 14.4997C10.9145 14.4997 11.2503 14.1639 11.2503 13.7497H10.5003H9.75033ZM14.0384 13.3254C14.2643 13.6726 14.7288 13.7709 15.076 13.545C15.4232 13.3191 15.5215 12.8545 15.2956 12.5073L14.667 12.9163L14.0384 13.3254ZM5.19732 9.80404C5.49022 9.51114 5.49022 9.03627 5.19732 8.74338C4.90443 8.45048 4.42956 8.45048 4.13666 8.74338L4.66699 9.27371L5.19732 9.80404ZM2.88666 9.99338C2.59377 10.2863 2.59377 10.7611 2.88666 11.054C3.17956 11.3469 3.65443 11.3469 3.94732 11.054L3.41699 10.5237L2.88666 9.99338ZM10.5003 11.6663V10.9163C7.85977 10.9163 5.96165 9.60261 4.69575 8.23934C4.06303 7.55794 3.59878 6.87418 3.29323 6.36085C3.14088 6.1049 3.02915 5.89329 2.95663 5.74825C2.9204 5.67578 2.89404 5.62011 2.87737 5.58402C2.86904 5.56598 2.86313 5.55285 2.85964 5.54499C2.85789 5.54106 2.85674 5.53845 2.85619 5.53719C2.85592 5.53657 2.8558 5.53628 2.85582 5.53634C2.85584 5.53637 2.85589 5.53649 2.85598 5.53669C2.85602 5.5368 2.85611 5.53701 2.85614 5.53707C2.85624 5.53731 2.85635 5.53757 2.16699 5.83301C1.47763 6.12845 1.47777 6.12875 1.47791 6.12908C1.47797 6.12922 1.47812 6.12958 1.47824 6.12985C1.47848 6.13041 1.47876 6.13106 1.47908 6.1318C1.47971 6.13327 1.48051 6.1351 1.48146 6.13728C1.48336 6.14163 1.48589 6.14739 1.48905 6.15449C1.49537 6.1687 1.50422 6.18833 1.51562 6.21302C1.53842 6.26238 1.57147 6.33203 1.61499 6.41907C1.70197 6.59304 1.83113 6.83716 2.00429 7.12808C2.34978 7.7085 2.87512 8.48308 3.59656 9.26001C5.039 10.8134 7.30755 12.4163 10.5003 12.4163V11.6663ZM13.4896 11.1069L13.215 10.409C12.4202 10.7219 11.5187 10.9163 10.5003 10.9163V11.6663V12.4163C11.7152 12.4163 12.8027 12.1833 13.7643 11.8048L13.4896 11.1069ZM7.511 11.1069L6.88236 10.6979L5.70502 12.5073L6.33366 12.9163L6.9623 13.3254L8.13964 11.516L7.511 11.1069ZM18.8337 5.83301C18.1443 5.53757 18.1444 5.53742 18.1444 5.53727C18.1444 5.53723 18.1445 5.53709 18.1445 5.53701C18.1446 5.53686 18.1447 5.53673 18.1447 5.53662C18.1448 5.53642 18.1448 5.53632 18.1448 5.53634C18.1448 5.53636 18.1446 5.53682 18.1442 5.53771C18.1435 5.53948 18.1419 5.54295 18.1396 5.54806C18.1351 5.55828 18.1275 5.57506 18.1168 5.59789C18.0955 5.64358 18.0621 5.7134 18.0161 5.80344C17.9242 5.98369 17.783 6.2439 17.5904 6.55291C17.204 7.17308 16.6184 7.97785 15.8204 8.72686L16.3337 9.27371L16.8469 9.82056C17.7644 8.95937 18.4288 8.04379 18.8635 7.34617C19.0815 6.99627 19.2436 6.69822 19.3524 6.48493C19.4068 6.3782 19.448 6.29243 19.4764 6.23172C19.4905 6.20136 19.5014 6.17723 19.5092 6.15986C19.5131 6.15117 19.5162 6.14417 19.5185 6.13891C19.5196 6.13628 19.5206 6.13409 19.5213 6.13235C19.5217 6.13147 19.522 6.13071 19.5223 6.13006C19.5225 6.12973 19.5226 6.12944 19.5227 6.12917C19.5228 6.12903 19.5228 6.12885 19.5229 6.12879C19.5229 6.12861 19.523 6.12845 18.8337 5.83301ZM16.3337 9.27371L15.8204 8.72686C15.1135 9.39032 14.2484 10.0023 13.215 10.409L13.4896 11.1069L13.7643 11.8048C15.01 11.3145 16.0324 10.5851 16.8469 9.82056L16.3337 9.27371ZM16.3337 9.27371L15.8033 9.80404L17.0533 11.054L17.5837 10.5237L18.114 9.99338L16.864 8.74338L16.3337 9.27371ZM10.5003 11.6663H9.75033V13.7497H10.5003H11.2503V11.6663H10.5003ZM13.4896 11.1069L12.861 11.516L14.0384 13.3254L14.667 12.9163L15.2956 12.5073L14.1183 10.6979L13.4896 11.1069ZM4.66699 9.27371L4.13666 8.74338L2.88666 9.99338L3.41699 10.5237L3.94732 11.054L5.19732 9.80404L4.66699 9.27371Z" fill="#4C4C4C" />
</svg>
  ); 
  const [showPassword, setShowPassword] = useState(false);

  return (
    <div className="flex items-center justify-center h-screen bg-gray-100">
      <div className="w-full max-w-[668px] h-screen bg-white py-6 px-36 shadow-md">
        <h1 className="text-5xl font-bold text-center mb-8">
          Авторизація
        </h1>
        <form className="space-y-6">
          <div className="flex items-center justify-end gap-[20px] mb-2 px-2">
            <label htmlFor="isAdmin" className="font-medium">
              Увійти як адмін
            </label>
            <input
              type="checkbox"
              id="isAdmin"
              name="isAdmin"
              className="w-6 h-6 border border-gray-300 rounded"
    />
  </div>
          <InputField
            label="E-mail*"
            type="email"
            placeholder="musicfreedom@gmail.com"
            error={state === "invalid" ? "Такого E-mail не зареєстровано. Вкажіть E-mail, з якою ви реєструвалися" : ""}
            rightIcon={<ErrorIcon state={state} />}
          />
          <InputField
            label="Пароль*"
            type={showPassword ? "text" : "password"}
            placeholder="Введіть пароль"
            error={state === "invalid" ? "Некоректний пароль" : ""}
            rightIcon={showPassword ? <EyeOpenIcon/> : <EyeClosedIcon />} 
          />
          <Button type="submit">Увійти</Button>
        </form>
        
        
        <div className="text-center mt-6">
          <a
            href="/forget"
            className=" font-normal underline text-neutral-700"
          >
            Забули пароль?
          </a>
        </div>
        
        <div className="text-center mt-36">
          <a
            href="/"
            className="inline-flex items-center gap-6 text-base font-normal text-black"
          >
            <span >
              <svg width="61" height="8" viewBox="0 0 61 8" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M0.64645 3.64645C0.451187 3.84171 0.451187 4.15829 0.64645 4.35355L3.82843 7.53553C4.02369 7.7308 4.34027 7.7308 4.53553 7.53553C4.7308 7.34027 4.7308 7.02369 4.53553 6.82843L1.70711 4L4.53553 1.17157C4.7308 0.976311 4.7308 0.659728 4.53553 0.464466C4.34027 0.269204 4.02369 0.269204 3.82843 0.464466L0.64645 3.64645ZM61 4V3.5L1 3.5V4V4.5L61 4.5V4Z" fill="black" />
              </svg>
              </span>
             Назад  до ІнХармоні.Юа 
          </a>
        </div>

        {/* TEST BLOCK  
               <div className="flex gap-3 mt-10 justify-center">
          <button
            type="button"
            onClick={() => setState("start")}
            className={`px-3 py-1 rounded ${
              state === "start" ? "bg-black text-white" : "bg-gray-200"
            }`}
          >
            Start
          </button>
          <button
            type="button"
            onClick={() => setState("invalid")}
            className={`px-3 py-1 rounded ${
              state === "invalid" ? "bg-red-500 text-white" : "bg-gray-200"
            }`}
          >
            Invalid
          </button>
          <button
            type="button"
            onClick={() => setState("success")}
            className={`px-3 py-1 rounded ${
              state === "success" ? "bg-green-500 text-white" : "bg-gray-200"
            }`}
          >
            Success
          </button>
        </div>
         END TEST BLOCK */}
      </div>
    </div>
  );
}